class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        auto len = nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;//保存二维数组结果
        if(len<3) return {};//排除3位元素以下的情况
        for(auto i = 0 ; i<len;i++){
            if(nums[0] > 0) return {};//第一位大于零排除
            //if(nums[i]==nums[i-1]) continue;//跳过相等数值
            if(i>0 && nums[i]== nums[i-1]) continue;//保证不会漏掉相同值
            int left = i+1;//
            int right = len-1;
            while(left<right){
                if(nums[left] + nums[right] < -nums[i]) left++;
                else if(nums[left] + nums[right] > -nums[i]) right--;
                else {
                    ans.push_back({nums[i],nums[left],nums[right]});
                    left++;
                    right--;
                    while(left<right && nums[right] == nums[right+1]) right--;
                    while(left<right && nums[left] == nums[left-1]) left++;
                }
            }
            
        }
        return ans;
    }
};